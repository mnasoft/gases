;;;; gases.lisp

(in-package #:gases)

;;; "gases" goes here. Hacks and glory await!


*N2*	          0.0003
*CO2*	          0.0022
*C1*	          0.7374
*C2*	          0.0593
*C3*	          0.1179
*iC4*	          0.0131
*nC4*	          0.0379
*iC5*	          0.0130
*nC5*	          0.0139
*nC6*	          0.0017
*Mcyclo_C5*	  0.0004
*Cyclo_C6*	  0.0002
*nC7*	          0.0001
*Mcyclo_C6*	  0.0001
*H2O*	          0.0027

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




(defun μCp (x temp)
  "Возвращает мольную изобарную теплоемкость в ккал/(моль*К)"
  (let ((a (first x))
	(b (second x))
	(c (third x)))
    (+ a (* b temp 0.001) (* c temp temp 0.001 0.001))))

(defun μCv (x temp)
    "Возвращает мольную изохорную теплоемкость в ккал/(моль*К)"
  (- (μCp x temp) 2))

(defun Cp (x temp)
  "Возвращает массовую изобарную теплоемкость в ккал/(кг*К)"
  (let ((μ (fourth x)))
    (/ (μCp x temp) μ 1000.0)))

(defun Cv (x temp)
    "Возвращает массовую изохорную теплоемкость в ккал/(моль*К)"
  (let ((μ (fourth x)))
    (/ (μCv x temp) μ 1000.0)))

(defun k (x temp)
  (/  (Cp x temp) (Cv x temp)))



(k *H2O* 573)

(Cp *C1* 373)

(Cv *C1* 373)

(mapcar
 #'(lambda (el)
     (list el (Cp '("С1" 3.381 18.044 -4.000) (+ 273 el)))
     

     )
 '(0 100 200 300 400 500 600 700 800 900 1000))
